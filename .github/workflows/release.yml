name: Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags (e.g., v1.0.0, v1.2.3)

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21]
        os: [linux, darwin]
        arch: [amd64, arm64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for proper versioning

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Run linter
      run: go vet ./...

    - name: Check formatting
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not formatted. Please run 'go fmt ./...'"
          gofmt -s -l .
          exit 1
        fi

    - name: Build binary
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
        CGO_ENABLED: 0
      run: |
        # Set binary name
        BINARY_NAME="terraform-provider-shodan"
        
        # Build with version info
        go build -ldflags="-s -w -X main.version=${{ github.ref_name }}" \
          -o "$BINARY_NAME" .
        
        # Create archive name
        ARCHIVE_NAME="terraform-provider-shodan_${{ github.ref_name }}_${{ matrix.os }}_${{ matrix.arch }}.tar.gz"
        tar -czf "$ARCHIVE_NAME" "$BINARY_NAME"
        
        echo "ARCHIVE_NAME=$ARCHIVE_NAME" >> $GITHUB_ENV
        echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: terraform-provider-shodan-${{ matrix.os }}-${{ matrix.arch }}
        path: |
          ${{ env.ARCHIVE_NAME }}
          ${{ env.BINARY_NAME }}

  create-release:
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/terraform-provider-shodan-linux-amd64/*.tar.gz
          artifacts/terraform-provider-shodan-linux-arm64/*.tar.gz
          artifacts/terraform-provider-shodan-darwin-amd64/*.tar.gz
          artifacts/terraform-provider-shodan-darwin-arm64/*.tar.gz
        generate_release_notes: true
        draft: false
        prerelease: false
        title: "Release ${{ github.ref_name }}"
        body: |
          ## üöÄ Terraform Provider for Shodan ${{ github.ref_name }}
          
          ### üì¶ What's New
          - Automated release with multi-platform binaries
          - Built for Go ${{ matrix.go-version }}
          
          ### üîß Supported Platforms
          - **Linux**: AMD64, ARM64
          - **macOS**: AMD64 (Intel), ARM64 (Apple Silicon)
          
          ### üì• Installation
          Download the appropriate binary for your platform and follow the [installation instructions](https://github.com/AdconnectDevOps/terraform-provider-shodan#installation).
          
          ### üîç Changes
          See the [CHANGELOG](https://github.com/AdconnectDevOps/terraform-provider-shodan/blob/main/CHANGELOG.md) for detailed changes.
          
          ---
          *This release was automatically generated by GitHub Actions*
